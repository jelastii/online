{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "KMM5ShtImCD0"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import datetime as dt\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn import metrics"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_excel(\"/content/OnlineRetail (1) (1).xlsx\")"
      ],
      "metadata": {
        "id": "2CVMDEVymybC"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head().T"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "_jVBUCCDnSIK",
        "outputId": "ed759b28-2692-4500-ebce-05c7b0dba8db"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              0                    1  \\\n",
              "InvoiceNo                                536365               536365   \n",
              "StockCode                                85123A                71053   \n",
              "Description  WHITE HANGING HEART T-LIGHT HOLDER  WHITE METAL LANTERN   \n",
              "Quantity                                      6                    6   \n",
              "InvoiceDate                 2010-12-01 08:26:00  2010-12-01 08:26:00   \n",
              "UnitPrice                                  2.55                 3.39   \n",
              "CustomerID                              17850.0              17850.0   \n",
              "Country                          United Kingdom       United Kingdom   \n",
              "\n",
              "                                          2  \\\n",
              "InvoiceNo                            536365   \n",
              "StockCode                            84406B   \n",
              "Description  CREAM CUPID HEARTS COAT HANGER   \n",
              "Quantity                                  8   \n",
              "InvoiceDate             2010-12-01 08:26:00   \n",
              "UnitPrice                              2.75   \n",
              "CustomerID                          17850.0   \n",
              "Country                      United Kingdom   \n",
              "\n",
              "                                               3  \\\n",
              "InvoiceNo                                 536365   \n",
              "StockCode                                 84029G   \n",
              "Description  KNITTED UNION FLAG HOT WATER BOTTLE   \n",
              "Quantity                                       6   \n",
              "InvoiceDate                  2010-12-01 08:26:00   \n",
              "UnitPrice                                   3.39   \n",
              "CustomerID                               17850.0   \n",
              "Country                           United Kingdom   \n",
              "\n",
              "                                          4  \n",
              "InvoiceNo                            536365  \n",
              "StockCode                            84029E  \n",
              "Description  RED WOOLLY HOTTIE WHITE HEART.  \n",
              "Quantity                                  6  \n",
              "InvoiceDate             2010-12-01 08:26:00  \n",
              "UnitPrice                              3.39  \n",
              "CustomerID                          17850.0  \n",
              "Country                      United Kingdom  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2328848f-1479-4d80-8ad3-0a4bbbc9a6cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>InvoiceNo</th>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>StockCode</th>\n",
              "      <td>85123A</td>\n",
              "      <td>71053</td>\n",
              "      <td>84406B</td>\n",
              "      <td>84029G</td>\n",
              "      <td>84029E</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Description</th>\n",
              "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
              "      <td>WHITE METAL LANTERN</td>\n",
              "      <td>CREAM CUPID HEARTS COAT HANGER</td>\n",
              "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
              "      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Quantity</th>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>InvoiceDate</th>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UnitPrice</th>\n",
              "      <td>2.55</td>\n",
              "      <td>3.39</td>\n",
              "      <td>2.75</td>\n",
              "      <td>3.39</td>\n",
              "      <td>3.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2328848f-1479-4d80-8ad3-0a4bbbc9a6cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2328848f-1479-4d80-8ad3-0a4bbbc9a6cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2328848f-1479-4d80-8ad3-0a4bbbc9a6cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a7952f98-d209-455a-a501-e2dbb921693d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a7952f98-d209-455a-a501-e2dbb921693d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a7952f98-d209-455a-a501-e2dbb921693d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def data_information(data):\n",
        "\n",
        "    print(\"\\033[1;41m\"+'Informations:'+\"\\033[0m\")\n",
        "    print('\\033[1;41m' + '=' + \"\\033[0m\")\n",
        "    print(data.info())\n",
        "    print('\\033[1;41m' + '=' + \"\\033[0m\")\n",
        "\n",
        "    print(\"\\033[1;42m\"+'Column names:'+\"\\033[0m\")\n",
        "    print('\\033[1;42m' + '=' + \"\\033[0m\")\n",
        "    print(data.columns)\n",
        "    print('\\033[1;42m' + '=' + \"\\033[0m\")\n",
        "\n",
        "    print('\\033[1;45m' + '=' + \"\\033[0m\")\n",
        "    print(\"\\033[1;45m\"+'Shape of dataset:'+\"\\033[0m\", data.shape)\n",
        "    print('\\033[1;45m' + '=' + \"\\033[0m\")\n",
        "\n",
        "    print(\"\\033[1;46m\"+'Is Null data:'+\"\\033[0m\")\n",
        "    print('\\033[1;46m' + '=' + \"\\033[0m\")\n",
        "    print(data.isnull().any())\n",
        "    print('\\033[1;46m' + '=' + \"\\033[0m\")\n",
        "\n",
        "    print(\"\\033[1;47m\"+'Number of Null data:'+\"\\033[0m\")\n",
        "    print('\\033[1;47m' + '=' + \"\\033[0m\")\n",
        "    print(data.isnull().sum())\n",
        "    print('\\033[1;47m' + '=' + \"\\033[0m\")\n",
        "\n",
        "    print(\"\\033[1;43m\"+'Unique data:'+\"\\033[0m\")\n",
        "    print('\\033[1;43m' + '=' + \"\\033[0m\")\n",
        "    print(data.nunique())\n",
        "    print('\\033[1;43m' + '=' + \"\\033[0m\")\n",
        "\n",
        "    print(\"\\033[1;44m\"+'Statistical reports:'+\"\\033[0m\")\n",
        "    print('\\033[1;44m' + '=' + \"\\033[0m\")\n",
        "    print(data.describe().T)\n",
        "    print('\\033[1;44m' + '=' + \"\\033[0m\")"
      ],
      "metadata": {
        "id": "59nSlyfDnghs"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_information(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nXWJU54mnxUC",
        "outputId": "a3c0867c-6571-4b86-9bd2-b7797128adfa"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;41mInformations:\u001b[0m\n",
            "\u001b[1;41m=\u001b[0m\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 541909 entries, 0 to 541908\n",
            "Data columns (total 8 columns):\n",
            " #   Column       Non-Null Count   Dtype         \n",
            "---  ------       --------------   -----         \n",
            " 0   InvoiceNo    541909 non-null  object        \n",
            " 1   StockCode    541909 non-null  object        \n",
            " 2   Description  540455 non-null  object        \n",
            " 3   Quantity     541909 non-null  int64         \n",
            " 4   InvoiceDate  541909 non-null  datetime64[ns]\n",
            " 5   UnitPrice    541909 non-null  float64       \n",
            " 6   CustomerID   406829 non-null  float64       \n",
            " 7   Country      541909 non-null  object        \n",
            "dtypes: datetime64[ns](1), float64(2), int64(1), object(4)\n",
            "memory usage: 33.1+ MB\n",
            "None\n",
            "\u001b[1;41m=\u001b[0m\n",
            "\u001b[1;42mColumn names:\u001b[0m\n",
            "\u001b[1;42m=\u001b[0m\n",
            "Index(['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate',\n",
            "       'UnitPrice', 'CustomerID', 'Country'],\n",
            "      dtype='object')\n",
            "\u001b[1;42m=\u001b[0m\n",
            "\u001b[1;45m=\u001b[0m\n",
            "\u001b[1;45mShape of dataset:\u001b[0m (541909, 8)\n",
            "\u001b[1;45m=\u001b[0m\n",
            "\u001b[1;46mIs Null data:\u001b[0m\n",
            "\u001b[1;46m=\u001b[0m\n",
            "InvoiceNo      False\n",
            "StockCode      False\n",
            "Description     True\n",
            "Quantity       False\n",
            "InvoiceDate    False\n",
            "UnitPrice      False\n",
            "CustomerID      True\n",
            "Country        False\n",
            "dtype: bool\n",
            "\u001b[1;46m=\u001b[0m\n",
            "\u001b[1;47mNumber of Null data:\u001b[0m\n",
            "\u001b[1;47m=\u001b[0m\n",
            "InvoiceNo           0\n",
            "StockCode           0\n",
            "Description      1454\n",
            "Quantity            0\n",
            "InvoiceDate         0\n",
            "UnitPrice           0\n",
            "CustomerID     135080\n",
            "Country             0\n",
            "dtype: int64\n",
            "\u001b[1;47m=\u001b[0m\n",
            "\u001b[1;43mUnique data:\u001b[0m\n",
            "\u001b[1;43m=\u001b[0m\n",
            "InvoiceNo      25900\n",
            "StockCode       4070\n",
            "Description     4211\n",
            "Quantity         722\n",
            "InvoiceDate    23260\n",
            "UnitPrice       1630\n",
            "CustomerID      4372\n",
            "Country           38\n",
            "dtype: int64\n",
            "\u001b[1;43m=\u001b[0m\n",
            "\u001b[1;44mStatistical reports:\u001b[0m\n",
            "\u001b[1;44m=\u001b[0m\n",
            "                count                           mean                  min  \\\n",
            "Quantity     541909.0                        9.55225             -80995.0   \n",
            "InvoiceDate    541909  2011-07-04 13:34:57.156386048  2010-12-01 08:26:00   \n",
            "UnitPrice    541909.0                       4.611114            -11062.06   \n",
            "CustomerID   406829.0                    15287.69057              12346.0   \n",
            "\n",
            "                             25%                  50%                  75%  \\\n",
            "Quantity                     1.0                  3.0                 10.0   \n",
            "InvoiceDate  2011-03-28 11:34:00  2011-07-19 17:17:00  2011-10-19 11:27:00   \n",
            "UnitPrice                   1.25                 2.08                 4.13   \n",
            "CustomerID               13953.0              15152.0              16791.0   \n",
            "\n",
            "                             max          std  \n",
            "Quantity                 80995.0   218.081158  \n",
            "InvoiceDate  2011-12-09 12:50:00          NaN  \n",
            "UnitPrice                38970.0    96.759853  \n",
            "CustomerID               18287.0  1713.600303  \n",
            "\u001b[1;44m=\u001b[0m\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "plt.hist(data['Quantity'], bins=20, color='skyblue', edgecolor='black')\n",
        "plt.title('Distribution of Quantity')\n",
        "plt.xlabel('Quantity')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "P42U5GQgn6D2",
        "outputId": "693e7d36-99ac-4246-edc1-b699dcd8694e"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top_products = data['Description'].value_counts().head(10)\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.barplot(x=top_products.values, y=top_products.index, palette='viridis')\n",
        "plt.title('Top 10 Products by Sales')\n",
        "plt.xlabel('Sales Count')\n",
        "plt.ylabel('Product Description')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 651
        },
        "id": "SpnwrilaoEeS",
        "outputId": "86502b6e-23c6-4c37-ab89-9c408d22edf1"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-1a27283c6f01>:4: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(x=top_products.values, y=top_products.index, palette='viridis')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Group the data by day and sum the quantities\n",
        "daily_sales = data.groupby(data['InvoiceDate'].dt.date)['Quantity'].sum()\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(daily_sales.index, daily_sales.values, color='green')\n",
        "plt.title('Daily Sales Over Time')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('Total Sales Quantity')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "gBg_5hIxofr2",
        "outputId": "ed885ecb-2a82-49c8-a4ba-f97c974314c5"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "country_sales = data.groupby('Country')['Quantity'].sum().sort_values(ascending=False).head(10)\n",
        "explode = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1)  # Explode the top 10 countries\n",
        "\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.pie(country_sales, labels=country_sales.index, autopct='%1.1f%%', startangle=140, explode=explode, colors=sns.color_palette('Set3'))\n",
        "plt.title('Sales Distribution by Country')\n",
        "plt.axis('equal')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 675
        },
        "id": "L2TkkrCMoqcI",
        "outputId": "c420520e-43f2-4642-ee99-b6b34f50531f"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.dropna(subset=['Description'], inplace=True)"
      ],
      "metadata": {
        "id": "w93O99dpovW2"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a dictionary to store mapping of 'InvoiceNo' to a new customer ID\n",
        "invoice_customer_mapping = {}\n",
        "\n",
        "# Initialize a counter for generating new customer IDs\n",
        "customer_id_counter = 1\n",
        "\n",
        "# Iterate through the DataFrame\n",
        "for index, row in data.iterrows():\n",
        "    invoice_no = row['InvoiceNo']\n",
        "    if pd.isnull(row['CustomerID']):\n",
        "        if invoice_no not in invoice_customer_mapping:\n",
        "            invoice_customer_mapping[invoice_no] = customer_id_counter\n",
        "            customer_id_counter += 1\n",
        "        data.at[index, 'CustomerID'] = invoice_customer_mapping[invoice_no]"
      ],
      "metadata": {
        "id": "DHT9n-BMo3da"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8fGlpMJWo7a1",
        "outputId": "487bc4bf-aaf2-496e-f316-8947078beeca"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 540455 entries, 0 to 541908\n",
            "Data columns (total 8 columns):\n",
            " #   Column       Non-Null Count   Dtype         \n",
            "---  ------       --------------   -----         \n",
            " 0   InvoiceNo    540455 non-null  object        \n",
            " 1   StockCode    540455 non-null  object        \n",
            " 2   Description  540455 non-null  object        \n",
            " 3   Quantity     540455 non-null  int64         \n",
            " 4   InvoiceDate  540455 non-null  datetime64[ns]\n",
            " 5   UnitPrice    540455 non-null  float64       \n",
            " 6   CustomerID   540455 non-null  float64       \n",
            " 7   Country      540455 non-null  object        \n",
            "dtypes: datetime64[ns](1), float64(2), int64(1), object(4)\n",
            "memory usage: 53.2+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head().T"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "LOpuP8yopAxU",
        "outputId": "18613728-fd9d-4b89-ed6d-a48fcb7ca9e5"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              0                    1  \\\n",
              "InvoiceNo                                536365               536365   \n",
              "StockCode                                85123A                71053   \n",
              "Description  WHITE HANGING HEART T-LIGHT HOLDER  WHITE METAL LANTERN   \n",
              "Quantity                                      6                    6   \n",
              "InvoiceDate                 2010-12-01 08:26:00  2010-12-01 08:26:00   \n",
              "UnitPrice                                  2.55                 3.39   \n",
              "CustomerID                              17850.0              17850.0   \n",
              "Country                          United Kingdom       United Kingdom   \n",
              "\n",
              "                                          2  \\\n",
              "InvoiceNo                            536365   \n",
              "StockCode                            84406B   \n",
              "Description  CREAM CUPID HEARTS COAT HANGER   \n",
              "Quantity                                  8   \n",
              "InvoiceDate             2010-12-01 08:26:00   \n",
              "UnitPrice                              2.75   \n",
              "CustomerID                          17850.0   \n",
              "Country                      United Kingdom   \n",
              "\n",
              "                                               3  \\\n",
              "InvoiceNo                                 536365   \n",
              "StockCode                                 84029G   \n",
              "Description  KNITTED UNION FLAG HOT WATER BOTTLE   \n",
              "Quantity                                       6   \n",
              "InvoiceDate                  2010-12-01 08:26:00   \n",
              "UnitPrice                                   3.39   \n",
              "CustomerID                               17850.0   \n",
              "Country                           United Kingdom   \n",
              "\n",
              "                                          4  \n",
              "InvoiceNo                            536365  \n",
              "StockCode                            84029E  \n",
              "Description  RED WOOLLY HOTTIE WHITE HEART.  \n",
              "Quantity                                  6  \n",
              "InvoiceDate             2010-12-01 08:26:00  \n",
              "UnitPrice                              3.39  \n",
              "CustomerID                          17850.0  \n",
              "Country                      United Kingdom  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fdcd6b5f-c0cc-4037-ac89-5c26148931b5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>InvoiceNo</th>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "      <td>536365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>StockCode</th>\n",
              "      <td>85123A</td>\n",
              "      <td>71053</td>\n",
              "      <td>84406B</td>\n",
              "      <td>84029G</td>\n",
              "      <td>84029E</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Description</th>\n",
              "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
              "      <td>WHITE METAL LANTERN</td>\n",
              "      <td>CREAM CUPID HEARTS COAT HANGER</td>\n",
              "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
              "      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Quantity</th>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>InvoiceDate</th>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UnitPrice</th>\n",
              "      <td>2.55</td>\n",
              "      <td>3.39</td>\n",
              "      <td>2.75</td>\n",
              "      <td>3.39</td>\n",
              "      <td>3.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "      <td>17850.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country</th>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>United Kingdom</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdcd6b5f-c0cc-4037-ac89-5c26148931b5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fdcd6b5f-c0cc-4037-ac89-5c26148931b5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fdcd6b5f-c0cc-4037-ac89-5c26148931b5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-67cba8d3-4706-410c-9731-ff4e42b351b0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67cba8d3-4706-410c-9731-ff4e42b351b0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-67cba8d3-4706-410c-9731-ff4e42b351b0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['CustomerID']= data['CustomerID'].astype(int)"
      ],
      "metadata": {
        "id": "S_KTYMbwpMNg"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a user-item matrix\n",
        "user_item_matrix = data.pivot_table(index='CustomerID',\n",
        "                                    columns='Description',\n",
        "                                    values='Quantity',\n",
        "                                    fill_value=0)"
      ],
      "metadata": {
        "id": "tNpmPcqApQUG"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "user_item_matrix"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "id": "27RqFOjZpV2k",
        "outputId": "5e10a33f-20d2-4bae-844a-ce126eac3d69"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Description  20713  *Boombox Ipod Classic  *USB Office Mirror Ball  \\\n",
              "CustomerID                                                           \n",
              "1                0                      0                        0   \n",
              "2                0                      0                        0   \n",
              "3                0                      0                        0   \n",
              "4                0                      0                        0   \n",
              "5                0                      0                        0   \n",
              "...            ...                    ...                      ...   \n",
              "18280            0                      0                        0   \n",
              "18281            0                      0                        0   \n",
              "18282            0                      0                        0   \n",
              "18283            0                      0                        0   \n",
              "18287            0                      0                        0   \n",
              "\n",
              "Description  10 COLOUR SPACEBOY PEN  12 COLOURED PARTY BALLOONS  \\\n",
              "CustomerID                                                        \n",
              "1                               1.0                         0.0   \n",
              "2                               0.0                         0.0   \n",
              "3                               0.0                         0.0   \n",
              "4                               0.0                         0.0   \n",
              "5                               0.0                         0.0   \n",
              "...                             ...                         ...   \n",
              "18280                           0.0                         0.0   \n",
              "18281                           0.0                         0.0   \n",
              "18282                           0.0                         0.0   \n",
              "18283                          11.5                         0.0   \n",
              "18287                           0.0                         0.0   \n",
              "\n",
              "Description  12 DAISY PEGS IN WOOD BOX  12 EGG HOUSE PAINTED WOOD  \\\n",
              "CustomerID                                                          \n",
              "1                                  0.0                        0.0   \n",
              "2                                  0.0                        0.0   \n",
              "3                                  0.0                        0.0   \n",
              "4                                  0.0                        0.0   \n",
              "5                                  0.0                        0.0   \n",
              "...                                ...                        ...   \n",
              "18280                              0.0                        0.0   \n",
              "18281                              0.0                        0.0   \n",
              "18282                              0.0                        0.0   \n",
              "18283                              0.0                        0.0   \n",
              "18287                              0.0                        0.0   \n",
              "\n",
              "Description  12 HANGING EGGS HAND PAINTED  12 IVORY ROSE PEG PLACE SETTINGS  \\\n",
              "CustomerID                                                                    \n",
              "1                                     0.0                               0.0   \n",
              "2                                     0.0                               0.0   \n",
              "3                                     0.0                               0.0   \n",
              "4                                     0.0                               0.0   \n",
              "5                                     0.0                               1.0   \n",
              "...                                   ...                               ...   \n",
              "18280                                 0.0                               0.0   \n",
              "18281                                 0.0                               0.0   \n",
              "18282                                 0.0                               0.0   \n",
              "18283                                 0.0                               0.0   \n",
              "18287                                 0.0                               0.0   \n",
              "\n",
              "Description  12 MESSAGE CARDS WITH ENVELOPES  ...  wrongly coded 20713  \\\n",
              "CustomerID                                    ...                        \n",
              "1                                        2.0  ...                    0   \n",
              "2                                        0.0  ...                    0   \n",
              "3                                        0.0  ...                    0   \n",
              "4                                        0.0  ...                    0   \n",
              "5                                        1.0  ...                    0   \n",
              "...                                      ...  ...                  ...   \n",
              "18280                                    0.0  ...                    0   \n",
              "18281                                    0.0  ...                    0   \n",
              "18282                                    0.0  ...                    0   \n",
              "18283                                    0.0  ...                    0   \n",
              "18287                                    0.0  ...                    0   \n",
              "\n",
              "Description  wrongly coded 23343  wrongly coded-23343  wrongly marked  \\\n",
              "CustomerID                                                              \n",
              "1                              0                    0               0   \n",
              "2                              0                    0               0   \n",
              "3                              0                    0               0   \n",
              "4                              0                    0               0   \n",
              "5                              0                    0               0   \n",
              "...                          ...                  ...             ...   \n",
              "18280                          0                    0               0   \n",
              "18281                          0                    0               0   \n",
              "18282                          0                    0               0   \n",
              "18283                          0                    0               0   \n",
              "18287                          0                    0               0   \n",
              "\n",
              "Description  wrongly marked 23343  wrongly marked carton 22804  \\\n",
              "CustomerID                                                       \n",
              "1                               0                            0   \n",
              "2                               0                            0   \n",
              "3                               0                            0   \n",
              "4                               0                            0   \n",
              "5                               0                            0   \n",
              "...                           ...                          ...   \n",
              "18280                           0                            0   \n",
              "18281                           0                            0   \n",
              "18282                           0                            0   \n",
              "18283                           0                            0   \n",
              "18287                           0                            0   \n",
              "\n",
              "Description  wrongly marked. 23343 in box  wrongly sold (22719) barcode  \\\n",
              "CustomerID                                                                \n",
              "1                                       0                             0   \n",
              "2                                       0                             0   \n",
              "3                                       0                             0   \n",
              "4                                       0                             0   \n",
              "5                                       0                             0   \n",
              "...                                   ...                           ...   \n",
              "18280                                   0                             0   \n",
              "18281                                   0                             0   \n",
              "18282                                   0                             0   \n",
              "18283                                   0                             0   \n",
              "18287                                   0                             0   \n",
              "\n",
              "Description  wrongly sold as sets  wrongly sold sets  \n",
              "CustomerID                                            \n",
              "1                               0                  0  \n",
              "2                               0                  0  \n",
              "3                               0                  0  \n",
              "4                               0                  0  \n",
              "5                               0                  0  \n",
              "...                           ...                ...  \n",
              "18280                           0                  0  \n",
              "18281                           0                  0  \n",
              "18282                           0                  0  \n",
              "18283                           0                  0  \n",
              "18287                           0                  0  \n",
              "\n",
              "[6628 rows x 4211 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13ca8c84-8894-4b0e-8ddf-7066a9ccc1eb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Description</th>\n",
              "      <th>20713</th>\n",
              "      <th>*Boombox Ipod Classic</th>\n",
              "      <th>*USB Office Mirror Ball</th>\n",
              "      <th>10 COLOUR SPACEBOY PEN</th>\n",
              "      <th>12 COLOURED PARTY BALLOONS</th>\n",
              "      <th>12 DAISY PEGS IN WOOD BOX</th>\n",
              "      <th>12 EGG HOUSE PAINTED WOOD</th>\n",
              "      <th>12 HANGING EGGS HAND PAINTED</th>\n",
              "      <th>12 IVORY ROSE PEG PLACE SETTINGS</th>\n",
              "      <th>12 MESSAGE CARDS WITH ENVELOPES</th>\n",
              "      <th>...</th>\n",
              "      <th>wrongly coded 20713</th>\n",
              "      <th>wrongly coded 23343</th>\n",
              "      <th>wrongly coded-23343</th>\n",
              "      <th>wrongly marked</th>\n",
              "      <th>wrongly marked 23343</th>\n",
              "      <th>wrongly marked carton 22804</th>\n",
              "      <th>wrongly marked. 23343 in box</th>\n",
              "      <th>wrongly sold (22719) barcode</th>\n",
              "      <th>wrongly sold as sets</th>\n",
              "      <th>wrongly sold sets</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18280</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18281</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18282</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18283</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18287</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6628 rows × 4211 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13ca8c84-8894-4b0e-8ddf-7066a9ccc1eb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-13ca8c84-8894-4b0e-8ddf-7066a9ccc1eb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-13ca8c84-8894-4b0e-8ddf-7066a9ccc1eb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4f2e0244-6c67-45ed-87c2-b21b1c7f010c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4f2e0244-6c67-45ed-87c2-b21b1c7f010c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4f2e0244-6c67-45ed-87c2-b21b1c7f010c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_83f828e6-7c6e-40d4-8175-a4998808bbda\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('user_item_matrix')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_83f828e6-7c6e-40d4-8175-a4998808bbda button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('user_item_matrix');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "user_item_matrix"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['InvoiceDay'] = data['InvoiceDate'].apply(lambda x: dt.datetime(x.year, x.month, x.day))"
      ],
      "metadata": {
        "id": "DFEhKsh9pZrr"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 207
        },
        "id": "I059sj-Bpij6",
        "outputId": "1dd9229b-7419-4169-d665-2f7615837b25"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  InvoiceNo StockCode                          Description  Quantity  \\\n",
              "0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n",
              "1    536365     71053                  WHITE METAL LANTERN         6   \n",
              "2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n",
              "3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n",
              "4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n",
              "\n",
              "          InvoiceDate  UnitPrice  CustomerID         Country InvoiceDay  \n",
              "0 2010-12-01 08:26:00       2.55       17850  United Kingdom 2010-12-01  \n",
              "1 2010-12-01 08:26:00       3.39       17850  United Kingdom 2010-12-01  \n",
              "2 2010-12-01 08:26:00       2.75       17850  United Kingdom 2010-12-01  \n",
              "3 2010-12-01 08:26:00       3.39       17850  United Kingdom 2010-12-01  \n",
              "4 2010-12-01 08:26:00       3.39       17850  United Kingdom 2010-12-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e3d42780-39e8-4e0f-a030-f623c09bbd93\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InvoiceNo</th>\n",
              "      <th>StockCode</th>\n",
              "      <th>Description</th>\n",
              "      <th>Quantity</th>\n",
              "      <th>InvoiceDate</th>\n",
              "      <th>UnitPrice</th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Country</th>\n",
              "      <th>InvoiceDay</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>536365</td>\n",
              "      <td>85123A</td>\n",
              "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2.55</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>536365</td>\n",
              "      <td>71053</td>\n",
              "      <td>WHITE METAL LANTERN</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>3.39</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>536365</td>\n",
              "      <td>84406B</td>\n",
              "      <td>CREAM CUPID HEARTS COAT HANGER</td>\n",
              "      <td>8</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2.75</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>536365</td>\n",
              "      <td>84029G</td>\n",
              "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>3.39</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>536365</td>\n",
              "      <td>84029E</td>\n",
              "      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>3.39</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3d42780-39e8-4e0f-a030-f623c09bbd93')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e3d42780-39e8-4e0f-a030-f623c09bbd93 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e3d42780-39e8-4e0f-a030-f623c09bbd93');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0b6fe30c-fe33-46f6-8c68-90437ced7e8c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b6fe30c-fe33-46f6-8c68-90437ced7e8c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0b6fe30c-fe33-46f6-8c68-90437ced7e8c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dt.timedelta(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fac5o2MxpqIU",
        "outputId": "e6f246fa-c460-4e3b-a153-b1fe3e40fc55"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "datetime.timedelta(days=1)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pin_date = max(data['InvoiceDay']) + dt.timedelta(1)\n",
        "pin_date"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TGg8NfMnpvuk",
        "outputId": "a26c5d2f-5b05-43e8-d222-a69b9353e663"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Timestamp('2011-12-10 00:00:00')"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['TotalSum'] = data['Quantity'] * data['UnitPrice']\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 207
        },
        "id": "sEqYTZCPpznu",
        "outputId": "0bad611f-6737-4934-9ea9-0dba0787b05b"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  InvoiceNo StockCode                          Description  Quantity  \\\n",
              "0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n",
              "1    536365     71053                  WHITE METAL LANTERN         6   \n",
              "2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n",
              "3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n",
              "4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n",
              "\n",
              "          InvoiceDate  UnitPrice  CustomerID         Country InvoiceDay  \\\n",
              "0 2010-12-01 08:26:00       2.55       17850  United Kingdom 2010-12-01   \n",
              "1 2010-12-01 08:26:00       3.39       17850  United Kingdom 2010-12-01   \n",
              "2 2010-12-01 08:26:00       2.75       17850  United Kingdom 2010-12-01   \n",
              "3 2010-12-01 08:26:00       3.39       17850  United Kingdom 2010-12-01   \n",
              "4 2010-12-01 08:26:00       3.39       17850  United Kingdom 2010-12-01   \n",
              "\n",
              "   TotalSum  \n",
              "0     15.30  \n",
              "1     20.34  \n",
              "2     22.00  \n",
              "3     20.34  \n",
              "4     20.34  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c9dedf5-f0cb-44f2-bea8-247cb9d69e6e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InvoiceNo</th>\n",
              "      <th>StockCode</th>\n",
              "      <th>Description</th>\n",
              "      <th>Quantity</th>\n",
              "      <th>InvoiceDate</th>\n",
              "      <th>UnitPrice</th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Country</th>\n",
              "      <th>InvoiceDay</th>\n",
              "      <th>TotalSum</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>536365</td>\n",
              "      <td>85123A</td>\n",
              "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2.55</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "      <td>15.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>536365</td>\n",
              "      <td>71053</td>\n",
              "      <td>WHITE METAL LANTERN</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>3.39</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>536365</td>\n",
              "      <td>84406B</td>\n",
              "      <td>CREAM CUPID HEARTS COAT HANGER</td>\n",
              "      <td>8</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>2.75</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>536365</td>\n",
              "      <td>84029G</td>\n",
              "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>3.39</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>536365</td>\n",
              "      <td>84029E</td>\n",
              "      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n",
              "      <td>6</td>\n",
              "      <td>2010-12-01 08:26:00</td>\n",
              "      <td>3.39</td>\n",
              "      <td>17850</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2010-12-01</td>\n",
              "      <td>20.34</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c9dedf5-f0cb-44f2-bea8-247cb9d69e6e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8c9dedf5-f0cb-44f2-bea8-247cb9d69e6e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8c9dedf5-f0cb-44f2-bea8-247cb9d69e6e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ac625701-73da-4fbf-a54c-83c5dd17fd18\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac625701-73da-4fbf-a54c-83c5dd17fd18')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ac625701-73da-4fbf-a54c-83c5dd17fd18 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rfm = data.groupby('CustomerID').agg({\n",
        "    'InvoiceDay': lambda x: (pin_date - x.max()).days,\n",
        "    'InvoiceNo': 'count',\n",
        "    'TotalSum': 'sum'\n",
        "})\n",
        "rfm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "4S-vqnGop2xo",
        "outputId": "1a4fce9a-aaaf-4829-96b8-b37e918bfc0e"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            InvoiceDay  InvoiceNo  TotalSum\n",
              "CustomerID                                 \n",
              "1                  374        527   5521.14\n",
              "2                  374          2      2.97\n",
              "3                  374          1     99.75\n",
              "4                  374          2      6.70\n",
              "5                  374        592   6915.65\n",
              "...                ...        ...       ...\n",
              "18280              278         10    180.60\n",
              "18281              181          7     80.82\n",
              "18282                8         13    176.60\n",
              "18283                4        756   2094.88\n",
              "18287               43         70   1837.28\n",
              "\n",
              "[6628 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-adc652b7-81e5-4357-90b3-330ec06c235e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InvoiceDay</th>\n",
              "      <th>InvoiceNo</th>\n",
              "      <th>TotalSum</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>374</td>\n",
              "      <td>527</td>\n",
              "      <td>5521.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>374</td>\n",
              "      <td>2</td>\n",
              "      <td>2.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>374</td>\n",
              "      <td>1</td>\n",
              "      <td>99.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>374</td>\n",
              "      <td>2</td>\n",
              "      <td>6.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>374</td>\n",
              "      <td>592</td>\n",
              "      <td>6915.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18280</th>\n",
              "      <td>278</td>\n",
              "      <td>10</td>\n",
              "      <td>180.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18281</th>\n",
              "      <td>181</td>\n",
              "      <td>7</td>\n",
              "      <td>80.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18282</th>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>176.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18283</th>\n",
              "      <td>4</td>\n",
              "      <td>756</td>\n",
              "      <td>2094.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18287</th>\n",
              "      <td>43</td>\n",
              "      <td>70</td>\n",
              "      <td>1837.28</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6628 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adc652b7-81e5-4357-90b3-330ec06c235e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-adc652b7-81e5-4357-90b3-330ec06c235e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-adc652b7-81e5-4357-90b3-330ec06c235e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9516d65d-9e68-4c68-85c8-f15ffc7c9ff2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9516d65d-9e68-4c68-85c8-f15ffc7c9ff2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9516d65d-9e68-4c68-85c8-f15ffc7c9ff2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_14b6ba1e-3485-40e9-9a6f-b325fa1451fa\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rfm')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_14b6ba1e-3485-40e9-9a6f-b325fa1451fa button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('rfm');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "rfm",
              "summary": "{\n  \"name\": \"rfm\",\n  \"rows\": 6628,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6869,\n        \"min\": 1,\n        \"max\": 18287,\n        \"num_unique_values\": 6628,\n        \"samples\": [\n          15450,\n          15303,\n          14577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"InvoiceDay\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111,\n        \"min\": 1,\n        \"max\": 374,\n        \"num_unique_values\": 304,\n        \"samples\": [\n          123,\n          155,\n          213\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"InvoiceNo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201,\n        \"min\": 1,\n        \"max\": 7983,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          364,\n          344,\n          308\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TotalSum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6859.848507851794,\n        \"min\": -17836.46,\n        \"max\": 279489.02,\n        \"num_unique_values\": 5732,\n        \"samples\": [\n          611.88,\n          321.05,\n          2571.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rfm.rename(columns= {\n",
        "    'InvoiceDay': 'Recency',\n",
        "    'InvoiceNo': 'Frequency',\n",
        "    'TotalSum': 'Monetary'\n",
        "}, inplace=True)\n",
        "rfm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "jOGGQM-Vp7Zk",
        "outputId": "6b1a6528-c353-4fea-ef9b-52e7347350d1"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Recency  Frequency  Monetary\n",
              "CustomerID                              \n",
              "1               374        527   5521.14\n",
              "2               374          2      2.97\n",
              "3               374          1     99.75\n",
              "4               374          2      6.70\n",
              "5               374        592   6915.65\n",
              "...             ...        ...       ...\n",
              "18280           278         10    180.60\n",
              "18281           181          7     80.82\n",
              "18282             8         13    176.60\n",
              "18283             4        756   2094.88\n",
              "18287            43         70   1837.28\n",
              "\n",
              "[6628 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b9a72550-4cde-4d12-b616-b49c99e81f7c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>374</td>\n",
              "      <td>527</td>\n",
              "      <td>5521.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>374</td>\n",
              "      <td>2</td>\n",
              "      <td>2.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>374</td>\n",
              "      <td>1</td>\n",
              "      <td>99.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>374</td>\n",
              "      <td>2</td>\n",
              "      <td>6.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>374</td>\n",
              "      <td>592</td>\n",
              "      <td>6915.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18280</th>\n",
              "      <td>278</td>\n",
              "      <td>10</td>\n",
              "      <td>180.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18281</th>\n",
              "      <td>181</td>\n",
              "      <td>7</td>\n",
              "      <td>80.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18282</th>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>176.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18283</th>\n",
              "      <td>4</td>\n",
              "      <td>756</td>\n",
              "      <td>2094.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18287</th>\n",
              "      <td>43</td>\n",
              "      <td>70</td>\n",
              "      <td>1837.28</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6628 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9a72550-4cde-4d12-b616-b49c99e81f7c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b9a72550-4cde-4d12-b616-b49c99e81f7c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b9a72550-4cde-4d12-b616-b49c99e81f7c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-03772d69-c472-45bd-8125-75e9b9be6547\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-03772d69-c472-45bd-8125-75e9b9be6547')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-03772d69-c472-45bd-8125-75e9b9be6547 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_0b16cf54-1150-4ed4-acb9-edad71a926a0\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rfm')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0b16cf54-1150-4ed4-acb9-edad71a926a0 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('rfm');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "rfm",
              "summary": "{\n  \"name\": \"rfm\",\n  \"rows\": 6628,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6869,\n        \"min\": 1,\n        \"max\": 18287,\n        \"num_unique_values\": 6628,\n        \"samples\": [\n          15450,\n          15303,\n          14577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111,\n        \"min\": 1,\n        \"max\": 374,\n        \"num_unique_values\": 304,\n        \"samples\": [\n          123,\n          155,\n          213\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201,\n        \"min\": 1,\n        \"max\": 7983,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          364,\n          344,\n          308\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6859.848507851794,\n        \"min\": -17836.46,\n        \"max\": 279489.02,\n        \"num_unique_values\": 5732,\n        \"samples\": [\n          611.88,\n          321.05,\n          2571.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r_labels = range(4, 0, -1) #[4, 3, 2, 1]\n",
        "r_groups = pd.qcut(rfm['Recency'], q=4, labels=r_labels)\n",
        "f_labels = range(1, 5) # [1, 2, 3, 4]\n",
        "f_groups = pd.qcut(rfm['Frequency'], q=4, labels=f_labels)\n",
        "m_labels = range(1, 5)\n",
        "m_groups = pd.qcut(rfm['Monetary'], q=4, labels=m_labels)"
      ],
      "metadata": {
        "id": "hw3CvXucp_18"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rfm['R'] = r_groups.values\n",
        "rfm['F'] = f_groups.values\n",
        "rfm['M'] = m_groups.values\n",
        "rfm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "5XlqQxjMqE5b",
        "outputId": "71611906-65bf-4f5e-fdca-d089312570d9"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Recency  Frequency  Monetary  R  F  M\n",
              "CustomerID                                       \n",
              "1               374        527   5521.14  1  4  4\n",
              "2               374          2      2.97  1  1  1\n",
              "3               374          1     99.75  1  1  1\n",
              "4               374          2      6.70  1  1  1\n",
              "5               374        592   6915.65  1  4  4\n",
              "...             ...        ...       ... .. .. ..\n",
              "18280           278         10    180.60  1  2  2\n",
              "18281           181          7     80.82  2  2  1\n",
              "18282             8         13    176.60  4  2  2\n",
              "18283             4        756   2094.88  4  4  4\n",
              "18287            43         70   1837.28  3  3  4\n",
              "\n",
              "[6628 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e251b2a6-97e3-4e9d-bcd3-63ce49225864\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "      <th>R</th>\n",
              "      <th>F</th>\n",
              "      <th>M</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>374</td>\n",
              "      <td>527</td>\n",
              "      <td>5521.14</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>374</td>\n",
              "      <td>2</td>\n",
              "      <td>2.97</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>374</td>\n",
              "      <td>1</td>\n",
              "      <td>99.75</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>374</td>\n",
              "      <td>2</td>\n",
              "      <td>6.70</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>374</td>\n",
              "      <td>592</td>\n",
              "      <td>6915.65</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18280</th>\n",
              "      <td>278</td>\n",
              "      <td>10</td>\n",
              "      <td>180.60</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18281</th>\n",
              "      <td>181</td>\n",
              "      <td>7</td>\n",
              "      <td>80.82</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18282</th>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>176.60</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18283</th>\n",
              "      <td>4</td>\n",
              "      <td>756</td>\n",
              "      <td>2094.88</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18287</th>\n",
              "      <td>43</td>\n",
              "      <td>70</td>\n",
              "      <td>1837.28</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6628 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e251b2a6-97e3-4e9d-bcd3-63ce49225864')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e251b2a6-97e3-4e9d-bcd3-63ce49225864 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e251b2a6-97e3-4e9d-bcd3-63ce49225864');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-18c793d2-926c-4369-aa35-e06e4cf6c8aa\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18c793d2-926c-4369-aa35-e06e4cf6c8aa')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-18c793d2-926c-4369-aa35-e06e4cf6c8aa button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_c6f83222-89b6-477c-b34a-87470e96f5ac\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rfm')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_c6f83222-89b6-477c-b34a-87470e96f5ac button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('rfm');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "rfm",
              "summary": "{\n  \"name\": \"rfm\",\n  \"rows\": 6628,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6869,\n        \"min\": 1,\n        \"max\": 18287,\n        \"num_unique_values\": 6628,\n        \"samples\": [\n          15450,\n          15303,\n          14577\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111,\n        \"min\": 1,\n        \"max\": 374,\n        \"num_unique_values\": 304,\n        \"samples\": [\n          123,\n          155,\n          213\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201,\n        \"min\": 1,\n        \"max\": 7983,\n        \"num_unique_values\": 544,\n        \"samples\": [\n          364,\n          344,\n          308\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6859.848507851794,\n        \"min\": -17836.46,\n        \"max\": 279489.02,\n        \"num_unique_values\": 5732,\n        \"samples\": [\n          611.88,\n          321.05,\n          2571.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data[data['CustomerID'] == 12346.0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113
        },
        "id": "Ss2JmrTyqJls",
        "outputId": "e21cd0ec-7b6a-414f-b388-b9650c21ad6f"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      InvoiceNo StockCode                     Description  Quantity  \\\n",
              "61619    541431     23166  MEDIUM CERAMIC TOP STORAGE JAR     74215   \n",
              "61624   C541433     23166  MEDIUM CERAMIC TOP STORAGE JAR    -74215   \n",
              "\n",
              "              InvoiceDate  UnitPrice  CustomerID         Country InvoiceDay  \\\n",
              "61619 2011-01-18 10:01:00       1.04       12346  United Kingdom 2011-01-18   \n",
              "61624 2011-01-18 10:17:00       1.04       12346  United Kingdom 2011-01-18   \n",
              "\n",
              "       TotalSum  \n",
              "61619   77183.6  \n",
              "61624  -77183.6  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-458a42b5-b13f-4941-bf5d-4fd8f3f1c4cb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InvoiceNo</th>\n",
              "      <th>StockCode</th>\n",
              "      <th>Description</th>\n",
              "      <th>Quantity</th>\n",
              "      <th>InvoiceDate</th>\n",
              "      <th>UnitPrice</th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Country</th>\n",
              "      <th>InvoiceDay</th>\n",
              "      <th>TotalSum</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>61619</th>\n",
              "      <td>541431</td>\n",
              "      <td>23166</td>\n",
              "      <td>MEDIUM CERAMIC TOP STORAGE JAR</td>\n",
              "      <td>74215</td>\n",
              "      <td>2011-01-18 10:01:00</td>\n",
              "      <td>1.04</td>\n",
              "      <td>12346</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2011-01-18</td>\n",
              "      <td>77183.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61624</th>\n",
              "      <td>C541433</td>\n",
              "      <td>23166</td>\n",
              "      <td>MEDIUM CERAMIC TOP STORAGE JAR</td>\n",
              "      <td>-74215</td>\n",
              "      <td>2011-01-18 10:17:00</td>\n",
              "      <td>1.04</td>\n",
              "      <td>12346</td>\n",
              "      <td>United Kingdom</td>\n",
              "      <td>2011-01-18</td>\n",
              "      <td>-77183.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-458a42b5-b13f-4941-bf5d-4fd8f3f1c4cb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-458a42b5-b13f-4941-bf5d-4fd8f3f1c4cb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-458a42b5-b13f-4941-bf5d-4fd8f3f1c4cb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8ce079f7-087c-49b3-a00f-c7748f4a62a4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ce079f7-087c-49b3-a00f-c7748f4a62a4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8ce079f7-087c-49b3-a00f-c7748f4a62a4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = rfm[['R', 'F', 'M']]\n",
        "kmeans = KMeans(n_clusters=10, init='k-means++', n_init = 'auto', max_iter=300)\n",
        "cluster_assignments = kmeans.fit(X)"
      ],
      "metadata": {
        "id": "GJqxzgEtqVJz"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Add cluster assignments to the DataFrame\n",
        "rfm['Cluster'] = cluster_assignments.labels_"
      ],
      "metadata": {
        "id": "vE5r86Xwqp9c"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the distribution of customers in each cluster\n",
        "cluster_counts = rfm['Cluster'].value_counts().sort_index()\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.bar(cluster_counts.index, cluster_counts.values, tick_label=cluster_counts.index)\n",
        "plt.xlabel('Cluster')\n",
        "plt.ylabel('Number of Customers')\n",
        "plt.title('Customer Distribution in Clusters')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "v8xLmsIBq_nQ",
        "outputId": "7db6c5b1-75e0-4c34-82dc-d9f097cda51c"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Print the customers in each cluster\n",
        "num_clusters = 10\n",
        "for cluster_id in range(num_clusters):\n",
        "    customers_in_cluster = rfm[rfm['Cluster'] == cluster_id].index\n",
        "    print(f'Cluster {cluster_id}: {len(customers_in_cluster)} customers')\n",
        "    # You can also explore the products purchased by customers in each cluster, if needed"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wylki5jDrC3i",
        "outputId": "035036e1-c5fc-4500-aed7-66c1db470c0a"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster 0: 636 customers\n",
            "Cluster 1: 495 customers\n",
            "Cluster 2: 661 customers\n",
            "Cluster 3: 1039 customers\n",
            "Cluster 4: 986 customers\n",
            "Cluster 5: 477 customers\n",
            "Cluster 6: 575 customers\n",
            "Cluster 7: 624 customers\n",
            "Cluster 8: 394 customers\n",
            "Cluster 9: 741 customers\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rfm[rfm['Cluster'] == 7]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "4Vw3b5J5rH6C",
        "outputId": "76435e7a-a904-4a10-f3b2-c8592850d903"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Recency  Frequency      Monetary  R  F  M  Cluster\n",
              "CustomerID                                                    \n",
              "1609             68         12  2.781500e+02  3  2  2        7\n",
              "1645             65         24  1.752900e+02  3  2  2        7\n",
              "1688             59         21  3.138600e+02  3  2  2        7\n",
              "1722             53         27  4.234200e+02  3  2  2        7\n",
              "1816             43          7  3.111000e+02  3  2  2        7\n",
              "...             ...        ...           ... .. .. ..      ...\n",
              "18270            39         13  2.389500e+02  3  2  2        7\n",
              "18273             3          3  2.040000e+02  4  1  2        7\n",
              "18274            18         22  1.776357e-15  4  2  1        7\n",
              "18276            22         16  3.233600e+02  4  2  2        7\n",
              "18282             8         13  1.766000e+02  4  2  2        7\n",
              "\n",
              "[624 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-267a5f4a-d118-44d0-adcb-50e3c2e5ee8b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "      <th>R</th>\n",
              "      <th>F</th>\n",
              "      <th>M</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1609</th>\n",
              "      <td>68</td>\n",
              "      <td>12</td>\n",
              "      <td>2.781500e+02</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1645</th>\n",
              "      <td>65</td>\n",
              "      <td>24</td>\n",
              "      <td>1.752900e+02</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1688</th>\n",
              "      <td>59</td>\n",
              "      <td>21</td>\n",
              "      <td>3.138600e+02</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1722</th>\n",
              "      <td>53</td>\n",
              "      <td>27</td>\n",
              "      <td>4.234200e+02</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1816</th>\n",
              "      <td>43</td>\n",
              "      <td>7</td>\n",
              "      <td>3.111000e+02</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18270</th>\n",
              "      <td>39</td>\n",
              "      <td>13</td>\n",
              "      <td>2.389500e+02</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18273</th>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2.040000e+02</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18274</th>\n",
              "      <td>18</td>\n",
              "      <td>22</td>\n",
              "      <td>1.776357e-15</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18276</th>\n",
              "      <td>22</td>\n",
              "      <td>16</td>\n",
              "      <td>3.233600e+02</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18282</th>\n",
              "      <td>8</td>\n",
              "      <td>13</td>\n",
              "      <td>1.766000e+02</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>624 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-267a5f4a-d118-44d0-adcb-50e3c2e5ee8b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-267a5f4a-d118-44d0-adcb-50e3c2e5ee8b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-267a5f4a-d118-44d0-adcb-50e3c2e5ee8b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-24d1df50-192f-4aa2-b203-8ae8079fa7e3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24d1df50-192f-4aa2-b203-8ae8079fa7e3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-24d1df50-192f-4aa2-b203-8ae8079fa7e3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"rfm[rfm['Cluster'] == 7]\",\n  \"rows\": 624,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3188,\n        \"min\": 1609,\n        \"max\": 18282,\n        \"num_unique_values\": 624,\n        \"samples\": [\n          16574,\n          17111,\n          14349\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 2,\n        \"max\": 73,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          50,\n          41,\n          68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 1,\n        \"max\": 87,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          7,\n          80,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 370.8815040183593,\n        \"min\": -1208.04,\n        \"max\": 6748.8,\n        \"num_unique_values\": 620,\n        \"samples\": [\n          197.71,\n          176.68,\n          414.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Generate customized offers by leveraging the most frequently purchased products within each customer cluster.\n",
        "recommended_products = {}\n",
        "for cluster in range(num_clusters):\n",
        "    cluster_data = rfm[rfm[\"Cluster\"] == cluster]\n",
        "    max_purchase_product = data[data[\"CustomerID\"].isin(cluster_data.index)].groupby([\"Description\"])[\"Quantity\"].sum().idxmax()\n",
        "    recommended_products[cluster] = max_purchase_product\n",
        "    print(recommended_products)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RhivcENXrLpn",
        "outputId": "64180136-9aed-4c0e-9eda-a964d5eb2254"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES', 4: 'ASSTD DESIGN 3D PAPER STICKERS'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES', 4: 'ASSTD DESIGN 3D PAPER STICKERS', 5: 'SMALL CHINESE STYLE SCISSOR'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES', 4: 'ASSTD DESIGN 3D PAPER STICKERS', 5: 'SMALL CHINESE STYLE SCISSOR', 6: 'did  a credit  and did not tick ret'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES', 4: 'ASSTD DESIGN 3D PAPER STICKERS', 5: 'SMALL CHINESE STYLE SCISSOR', 6: 'did  a credit  and did not tick ret', 7: 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES', 4: 'ASSTD DESIGN 3D PAPER STICKERS', 5: 'SMALL CHINESE STYLE SCISSOR', 6: 'did  a credit  and did not tick ret', 7: 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 8: 'JUMBO BAG RED RETROSPOT'}\n",
            "{0: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 1: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 2: 'SMALL POPCORN HOLDER', 3: 'PACK OF 72 RETROSPOT CAKE CASES', 4: 'ASSTD DESIGN 3D PAPER STICKERS', 5: 'SMALL CHINESE STYLE SCISSOR', 6: 'did  a credit  and did not tick ret', 7: 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 8: 'JUMBO BAG RED RETROSPOT', 9: 'WORLD WAR 2 GLIDERS ASSTD DESIGNS'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Show offers to users\n",
        "pd.DataFrame({\n",
        "    \"Cluster\": list(recommended_products.keys()),\n",
        "    \"RecommendedProduct\": list(recommended_products.values())\n",
        "}).style.background_gradient(cmap=\"viridis\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "df40yhXGrQ7_",
        "outputId": "790c6223-8d6e-4963-9c27-8f9efddcbb8c"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7dbb32d46d10>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_9fe82_row0_col0 {\n",
              "  background-color: #440154;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row1_col0 {\n",
              "  background-color: #482878;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row2_col0 {\n",
              "  background-color: #3e4989;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row3_col0 {\n",
              "  background-color: #31688e;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row4_col0 {\n",
              "  background-color: #26828e;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row5_col0 {\n",
              "  background-color: #1f9e89;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row6_col0 {\n",
              "  background-color: #35b779;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_9fe82_row7_col0 {\n",
              "  background-color: #6ece58;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_9fe82_row8_col0 {\n",
              "  background-color: #b5de2b;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_9fe82_row9_col0 {\n",
              "  background-color: #fde725;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_9fe82\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_9fe82_level0_col0\" class=\"col_heading level0 col0\" >Cluster</th>\n",
              "      <th id=\"T_9fe82_level0_col1\" class=\"col_heading level0 col1\" >RecommendedProduct</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_9fe82_row0_col0\" class=\"data row0 col0\" >0</td>\n",
              "      <td id=\"T_9fe82_row0_col1\" class=\"data row0 col1\" >WORLD WAR 2 GLIDERS ASSTD DESIGNS</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_9fe82_row1_col0\" class=\"data row1 col0\" >1</td>\n",
              "      <td id=\"T_9fe82_row1_col1\" class=\"data row1 col1\" >WORLD WAR 2 GLIDERS ASSTD DESIGNS</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_9fe82_row2_col0\" class=\"data row2 col0\" >2</td>\n",
              "      <td id=\"T_9fe82_row2_col1\" class=\"data row2 col1\" >SMALL POPCORN HOLDER</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_9fe82_row3_col0\" class=\"data row3 col0\" >3</td>\n",
              "      <td id=\"T_9fe82_row3_col1\" class=\"data row3 col1\" >PACK OF 72 RETROSPOT CAKE CASES</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_9fe82_row4_col0\" class=\"data row4 col0\" >4</td>\n",
              "      <td id=\"T_9fe82_row4_col1\" class=\"data row4 col1\" >ASSTD DESIGN 3D PAPER STICKERS</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_9fe82_row5_col0\" class=\"data row5 col0\" >5</td>\n",
              "      <td id=\"T_9fe82_row5_col1\" class=\"data row5 col1\" >SMALL CHINESE STYLE SCISSOR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_9fe82_row6_col0\" class=\"data row6 col0\" >6</td>\n",
              "      <td id=\"T_9fe82_row6_col1\" class=\"data row6 col1\" >did  a credit  and did not tick ret</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_9fe82_row7_col0\" class=\"data row7 col0\" >7</td>\n",
              "      <td id=\"T_9fe82_row7_col1\" class=\"data row7 col1\" >ESSENTIAL BALM 3.5g TIN IN ENVELOPE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_9fe82_row8_col0\" class=\"data row8 col0\" >8</td>\n",
              "      <td id=\"T_9fe82_row8_col1\" class=\"data row8 col1\" >JUMBO BAG RED RETROSPOT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_9fe82_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_9fe82_row9_col0\" class=\"data row9 col0\" >9</td>\n",
              "      <td id=\"T_9fe82_row9_col1\" class=\"data row9 col1\" >WORLD WAR 2 GLIDERS ASSTD DESIGNS</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Generate proposals for each client\n",
        "customer_recommendations = {}\n",
        "\n",
        "for cluster in range(10):\n",
        "    # Selection of customers who belong to the respective cluster\n",
        "    cluster_data = rfm[rfm['Cluster'] == cluster]\n",
        "\n",
        "    # Find the product with the most purchases in this cluster\n",
        "    max_purchase_product = data[data['CustomerID'].isin(cluster_data.index)].groupby('Description')['Quantity'].sum().idxmax()\n",
        "\n",
        "    # Find customers who have not purchased this product\n",
        "    customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
        "\n",
        "    # Add the product to the offer list for each customer\n",
        "    for customer_id in customers_without_max_product['CustomerID'].unique():\n",
        "        if customer_id not in customer_recommendations:\n",
        "            # If the customer is getting the recommended products for the first time, make the offer list empty (empty list).\n",
        "            customer_recommendations[customer_id] = []\n",
        "\n",
        "        # Offer the customer the most purchased products\n",
        "        customer_recommendations[customer_id].append(max_purchase_product)\n",
        "for customer_id, product in customer_recommendations.items():\n",
        "    print(f\"customer: {customer_id}, recommended_products: {product}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qm5LDsKTrWyw",
        "outputId": "b69072ac-b3df-4f07-8237-cc2c5c7e6c43"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n",
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "customer: 14047, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17017, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER']\n",
            "customer: 15093, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13370, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14800, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 28, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 62, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15750, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14032, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER']\n",
            "customer: 15498, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17340, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER']\n",
            "customer: 70, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17671, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 81, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18065, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 85, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17211, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13198, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12540, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 90, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14544, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15640, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15563, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 120, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17404, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 123, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 129, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12748, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15581, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'ASSTD DESIGN 3D PAPER STICKERS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16686, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 141, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18097, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17400, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 195, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15358, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15281, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17365, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14669, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13488, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12553, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 251, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15179, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 296, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14049, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16496, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17311, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18125, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13330, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15144, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17884, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 331, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15421, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12437, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16333, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13539, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12754, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16951, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13157, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15382, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14057, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 404, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17838, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13477, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 417, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 418, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13804, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17499, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18172, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13971, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14676, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13722, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15220, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14911, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17381, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15764, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15806, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16553, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17611, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12901, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16383, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12955, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17272, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15245, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13743, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13652, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15674, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15980, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17861, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17042, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15530, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14446, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 671, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15367, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15665, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15867, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 13268, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17160, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17091, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13742, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 12681, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16085, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13692, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16399, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 717, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12947, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 725, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16558, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15034, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14189, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13209, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16637, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15622, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18062, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18178, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12886, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14739, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15023, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 792, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13952, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17516, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17364, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14709, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16007, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14224, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17597, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14920, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14573, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15296, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15854, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER']\n",
            "customer: 14016, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15730, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14407, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15791, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13308, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13831, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17659, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15314, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15804, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 14336, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14338, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13398, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12473, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 955, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 971, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ASSTD DESIGN 3D PAPER STICKERS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16967, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17589, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16153, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17015, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13050, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 986, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18221, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13466, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12406, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1047, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12826, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17426, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16050, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17444, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15840, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12432, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12933, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1116, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16841, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16247, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12412, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17314, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1122, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12615, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14329, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1160, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17930, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1178, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13901, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1198, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1200, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1202, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18013, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1210, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1230, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13224, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12935, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15114, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15004, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13507, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1262, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17774, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14156, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15529, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16464, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14769, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14745, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14849, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1311, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14443, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15372, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1317, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17734, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1332, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1336, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14307, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16170, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15746, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16147, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12456, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13851, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16098, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1365, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15494, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1378, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18235, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16470, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14232, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18257, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12418, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17073, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 16723, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14875, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16340, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15727, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13527, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12948, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12484, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'ASSTD DESIGN 3D PAPER STICKERS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1436, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13588, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15829, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1466, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14067, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16629, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16820, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13510, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13137, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14895, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14250, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13381, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15322, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13518, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16160, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13658, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17602, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17898, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16108, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14096, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1557, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15239, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15484, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13336, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15978, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15429, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16771, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16531, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14456, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ASSTD DESIGN 3D PAPER STICKERS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13139, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17950, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13647, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17552, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14916, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'ASSTD DESIGN 3D PAPER STICKERS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15321, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13095, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15834, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1606, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16283, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER']\n",
            "customer: 17924, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16253, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16556, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16360, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17957, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15757, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15687, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17086, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15815, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16685, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15193, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14535, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17965, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12536, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1681, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13115, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1692, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18096, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12783, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15113, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17757, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16463, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17824, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16284, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17092, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13918, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16015, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15427, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15592, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15277, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14139, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15993, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16949, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13982, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14673, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16367, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16379, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17442, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16221, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15570, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16602, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18022, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16012, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15676, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14971, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16488, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13523, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16732, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16863, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14132, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 17977, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16169, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1974, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12985, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 1978, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15492, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13091, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16720, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18082, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16341, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 2015, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 2016, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17412, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 2034, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2036, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13500, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12481, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17799, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16279, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2068, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17387, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15044, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 2074, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16369, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2096, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14581, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 2106, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2107, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12620, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 2135, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18145, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14121, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2174, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14178, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 12989, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 18122, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14299, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16759, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14788, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 12925, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16904, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17728, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17914, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14907, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2225, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2254, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16754, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13506, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14586, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'PACK OF 72 RETROSPOT CAKE CASES', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15308, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13708, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15047, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'SMALL POPCORN HOLDER', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13368, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 13712, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 16193, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 14022, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15210, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 15732, recommended_products: ['WORLD WAR 2 GLIDERS ASSTD DESIGNS', 'JUMBO BAG RED RETROSPOT', 'WORLD WAR 2 GLIDERS ASSTD DESIGNS']\n",
            "customer: 17511, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16218, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17908, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17920, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17968, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14729, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12433, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 1, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 5, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18011, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 18041, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14449, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 9, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17567, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15384, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 18168, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13081, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15351, recommended_products: ['SMALL POPCORN HOLDER', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18156, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15880, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15894, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12720, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15502, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 29, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 31, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 32, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15039, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15919, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17259, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16550, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 37, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 13569, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 50, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 54, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 55, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 56, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12839, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15311, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15298, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 65, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15005, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16255, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12682, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13327, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 75, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 76, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 77, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 78, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13969, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16499, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14448, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15503, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16923, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14159, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17085, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15998, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17618, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 89, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14796, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17303, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14961, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16899, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14680, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 104, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 106, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 107, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17230, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13458, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 112, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17062, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 18223, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12931, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 124, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 125, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 128, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 134, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 137, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 14298, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 143, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 159, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 160, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 161, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 162, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 163, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 186, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18116, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14553, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15464, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17949, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13680, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 208, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13764, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13093, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15845, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15139, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16779, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13451, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 218, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17406, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 229, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 231, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 235, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 236, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14040, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 239, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 241, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17019, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 242, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 247, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 248, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 249, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17581, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16401, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15673, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12673, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13983, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 254, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 255, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 256, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 257, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 263, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 267, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 268, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 269, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 279, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16618, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14692, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 283, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 285, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 288, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 292, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15110, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17677, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12744, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17811, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 304, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 307, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15910, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12377, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 314, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17619, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15058, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15881, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16745, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 330, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 334, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 335, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 336, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18118, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14688, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 354, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 357, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 359, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 360, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 363, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17686, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16842, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 364, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 367, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15856, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 375, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13475, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14606, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14701, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13004, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16431, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14760, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 386, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15002, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13001, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 387, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 388, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 389, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 391, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 392, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 393, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17954, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15785, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16265, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 16115, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13421, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 421, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 423, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 425, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 426, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 428, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16940, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 431, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16592, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 437, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15990, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 439, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13509, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 443, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 444, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 448, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 450, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 451, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14934, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16709, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12727, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17652, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12541, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14995, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14670, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 464, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17571, recommended_products: ['SMALL POPCORN HOLDER', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 16316, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 481, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12759, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14165, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14291, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 496, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15939, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 510, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14913, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12583, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 517, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15125, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16392, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13716, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 542, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 543, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15861, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15019, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16444, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13102, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 571, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 573, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14711, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 579, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 586, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 588, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 589, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 590, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17979, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 599, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15426, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12669, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 610, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 614, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 616, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 617, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 618, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 622, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16398, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13571, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 639, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 640, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18109, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13269, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17744, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13098, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14912, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14903, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14619, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 675, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16889, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13606, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12982, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 12596, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16348, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14390, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14206, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14105, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 708, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 710, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 712, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15491, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 715, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 718, recommended_products: ['SMALL POPCORN HOLDER', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 719, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 720, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 724, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15436, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17061, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 18283, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12622, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 749, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 751, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16442, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16823, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15891, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13637, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16755, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17961, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 791, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 793, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 805, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 807, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16807, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17410, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16440, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17629, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14591, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 828, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 833, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 834, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 835, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 837, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 838, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 839, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 840, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 841, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 842, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 843, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15521, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15187, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14988, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17932, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 862, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 16710, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12949, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 893, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 894, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 895, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14583, recommended_products: ['SMALL POPCORN HOLDER', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 899, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 901, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 902, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 903, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16813, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18008, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 14817, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15513, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 937, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 945, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 947, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 948, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12709, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 965, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12517, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15812, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 978, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15349, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 990, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1003, recommended_products: ['SMALL POPCORN HOLDER', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14963, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 17101, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 15076, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13815, recommended_products: ['SMALL POPCORN HOLDER', 'PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16013, recommended_products: ['SMALL POPCORN HOLDER']\n",
            "customer: 13767, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12838, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14135, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 13418, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15544, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17976, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15061, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12738, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13013, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12395, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16411, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17419, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15628, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12921, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18043, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14896, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16065, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14702, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12471, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14107, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13798, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16873, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17372, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16726, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15392, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12867, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17980, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17189, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13319, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14646, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16241, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15719, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17284, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12736, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17428, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14270, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16701, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14587, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13284, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13089, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14215, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15615, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15213, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12451, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15443, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13230, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13396, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14257, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14341, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17082, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16422, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14243, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13754, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17180, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17431, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12528, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14426, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15738, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17068, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17147, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16570, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14850, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17228, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16684, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17672, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12567, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13911, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14194, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13725, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12599, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12721, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13590, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 361, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16425, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17667, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12415, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15228, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13904, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15755, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14502, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15065, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17338, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13862, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13694, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ASSTD DESIGN 3D PAPER STICKERS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12845, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16145, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12582, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17865, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15805, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12633, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14952, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15547, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16493, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16992, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12678, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14239, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14056, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12428, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12683, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15241, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14292, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15416, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14388, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17841, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13344, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13340, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13975, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17049, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14112, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14936, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16743, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17164, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16954, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15671, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17675, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15932, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15433, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16256, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16023, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15140, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14205, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12726, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16809, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12604, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17519, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13263, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13736, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15078, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14085, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12728, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16814, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12957, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 612, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16871, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16657, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 18179, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18198, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15981, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12909, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17735, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13883, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15223, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15289, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18185, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14719, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13015, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17470, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15244, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17783, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13515, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13266, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13771, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12705, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12356, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13265, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15780, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13881, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12363, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13549, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17236, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16409, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14844, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15147, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16131, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17071, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13317, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16249, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12477, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13989, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14092, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12878, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13474, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14227, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12407, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15594, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16730, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12971, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14626, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13485, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13505, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16834, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12429, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13285, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12417, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18272, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14667, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15620, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 15582, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15906, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16700, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13450, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17423, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18241, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16353, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14005, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14684, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17869, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15518, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17323, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12700, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13394, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16791, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17664, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16712, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14748, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12757, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15826, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14527, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17107, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16076, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13232, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14755, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15116, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14647, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13758, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13546, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12621, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14191, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15132, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14534, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16763, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12876, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17051, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16969, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13437, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15152, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14466, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14944, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16626, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13875, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1007, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12778, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12597, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16113, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17576, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16938, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17155, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17490, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17446, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13826, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13107, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16713, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17159, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1114, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14998, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15253, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12465, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17593, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 17899, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15290, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18265, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13338, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17046, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17220, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 12647, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15577, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12782, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14498, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16225, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17738, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15987, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 16271, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13136, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18146, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17625, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16033, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13814, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16133, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 17931, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16062, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12716, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14885, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16655, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18099, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18079, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17716, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16053, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15117, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'SMALL CHINESE STYLE SCISSOR', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12619, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15786, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16187, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15232, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17045, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18225, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15159, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12991, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12364, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15984, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17059, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12645, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17041, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14004, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13728, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12610, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17690, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17315, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14948, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16744, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15136, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13211, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14208, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18222, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14410, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14212, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13880, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13704, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12895, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18001, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16910, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15707, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14367, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15466, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16460, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17628, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14236, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12657, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16669, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16049, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16407, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 18016, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13314, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13516, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1595, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16653, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15955, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1600, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15933, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16268, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16101, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14503, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1612, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1613, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1614, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16374, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1623, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16295, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14383, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14533, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12569, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1645, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17651, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12519, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12740, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1648, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14560, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12856, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17509, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13113, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14514, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16395, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12607, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12772, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1676, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1682, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1688, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12667, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12766, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 12631, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1699, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18130, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1702, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12380, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1708, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17377, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1720, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12611, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 1728, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15814, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1743, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13471, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14467, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12398, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17870, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16549, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16110, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14550, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12448, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15145, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14357, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17530, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12494, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12571, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1858, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17346, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 13868, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15275, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15743, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14102, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1914, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14150, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1916, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16445, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12638, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15618, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15870, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17302, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14050, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1942, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1951, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1954, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16025, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1956, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16903, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16094, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1975, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17052, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1988, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15599, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13021, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 18117, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16504, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 1998, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2004, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12731, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16469, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14554, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2039, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15435, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2056, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14277, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17650, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16513, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2084, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14657, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2094, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16376, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14790, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14744, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2124, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2139, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16024, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12479, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 17379, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2140, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2143, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2150, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2151, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2154, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12598, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2180, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2183, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12762, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2188, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12560, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2199, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 12381, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 16200, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2218, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2219, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2223, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 14418, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15471, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 15525, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2244, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2245, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2248, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 2253, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 2255, recommended_products: ['PACK OF 72 RETROSPOT CAKE CASES']\n",
            "customer: 13008, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 16083, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 12829, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 14401, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 15641, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 12577, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 12501, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 13233, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 14321, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 16084, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 13717, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 15819, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 17966, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 14968, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 17867, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 17348, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14904, recommended_products: ['ASSTD DESIGN 3D PAPER STICKERS']\n",
            "customer: 15983, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 13848, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 17816, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 17890, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 18077, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 18196, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 16377, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 18009, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 12712, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 13052, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 14000, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 12815, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 17414, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 14493, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 15800, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 12701, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 14710, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 15679, recommended_products: ['SMALL CHINESE STYLE SCISSOR']\n",
            "customer: 14293, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 16898, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 17105, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 17537, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 539, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 621, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 14152, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 13117, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 911, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 12449, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE']\n",
            "customer: 1295, recommended_products: ['ESSENTIAL BALM 3.5g TIN IN ENVELOPE', 'JUMBO BAG RED RETROSPOT']\n",
            "customer: 15012, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16456, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13777, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17732, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16891, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15808, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16161, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17860, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16919, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15838, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15965, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16086, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 53, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16125, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16525, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17341, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15032, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13531, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16520, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12785, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14565, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14525, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16458, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14415, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13238, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 105, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15062, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17001, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15394, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13534, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12551, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13033, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 164, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 171, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 181, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13304, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13313, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13629, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13715, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14258, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15379, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12413, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 213, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15769, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17555, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16833, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16748, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15835, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12490, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12672, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 246, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 250, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13048, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14242, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16997, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 261, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 262, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 264, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 265, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 266, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 278, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14713, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 281, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 282, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 284, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 286, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 287, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 289, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14130, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15218, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14389, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 298, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 312, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 315, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 318, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16403, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16612, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13802, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12373, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14549, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 325, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15971, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 329, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14188, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18017, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12990, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 338, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 339, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16725, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14438, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13334, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14475, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 356, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 358, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15406, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17282, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17454, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 376, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 379, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15122, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16839, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 390, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 396, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16182, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16393, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14520, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17075, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 427, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17063, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17139, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14231, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13751, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 434, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12811, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 442, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17462, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13599, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16670, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13931, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17769, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 465, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 466, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 467, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16782, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 476, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 477, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15234, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12758, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12623, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17238, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13871, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16625, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14930, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13225, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 526, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 527, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 528, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 529, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 530, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 532, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 533, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13121, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16523, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 540, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14110, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 544, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 550, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 551, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 552, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 553, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13591, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15898, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 562, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13985, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12423, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 572, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 580, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 583, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 584, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 585, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13821, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14607, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16620, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14235, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14127, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 609, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18177, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 615, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 620, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16945, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13999, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 628, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 638, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16180, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13294, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 655, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 656, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 664, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 668, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14465, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13562, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 674, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14450, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12447, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16188, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14273, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14482, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 700, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 701, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 703, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 704, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 705, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 707, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17029, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16746, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14623, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 721, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15508, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13141, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 723, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 726, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17115, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13162, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 747, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 748, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13408, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 750, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 752, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 753, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 754, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 755, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18183, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12840, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 772, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16099, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 776, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16370, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14655, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 784, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16942, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17174, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 808, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16121, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 815, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 816, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 817, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14766, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13242, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 827, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 829, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 830, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 831, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 832, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 844, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 845, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 846, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 847, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13487, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13235, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13837, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14364, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17758, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14489, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13246, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 892, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 897, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17389, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17047, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14859, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15201, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 910, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17644, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 916, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 917, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 919, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 920, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17375, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 923, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 924, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 925, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14593, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12562, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 936, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16624, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 944, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 946, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13070, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 952, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14515, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 954, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 958, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 959, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 960, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 962, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 972, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12455, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14891, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14659, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 979, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13643, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 982, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 983, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14622, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 991, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 992, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 993, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 996, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 997, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 999, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1000, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1001, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1002, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1004, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1011, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12409, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15527, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1035, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1036, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1037, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12516, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17289, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17802, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1044, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1056, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1057, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1061, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1062, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1068, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1069, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14222, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17642, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1077, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1092, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1093, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1094, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1095, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1096, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1098, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1101, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1111, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1112, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1113, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12500, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1131, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1132, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1133, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1136, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16242, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1145, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1147, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1149, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13461, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1166, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15584, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12626, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1167, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1169, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1170, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17706, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16918, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1177, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1181, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1183, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1184, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17469, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14905, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1193, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1194, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1197, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1199, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16929, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14459, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16156, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17031, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1213, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1214, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1216, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1217, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1218, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1224, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1225, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1226, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1228, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15756, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1241, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1243, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1244, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1245, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1254, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1255, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1261, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16474, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1265, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1266, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1267, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1268, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1269, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1271, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1282, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1283, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17779, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14088, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17229, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17754, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1296, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1300, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1301, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1307, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13563, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17265, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17935, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17649, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1314, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1318, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1319, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1320, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13379, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18094, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1333, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16609, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12853, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1339, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14315, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14735, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16931, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16984, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13850, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1354, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1355, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16835, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17514, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1358, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12704, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1364, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14024, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1372, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1379, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1382, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1387, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13069, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1394, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13838, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14658, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16272, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18143, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1403, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15541, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13014, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14566, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15313, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15712, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17083, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12627, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1417, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17705, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15950, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1427, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12715, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1437, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1438, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1440, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1441, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1443, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1446, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17298, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1451, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1455, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16722, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13045, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1458, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1459, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1460, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14276, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16735, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1461, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1476, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14965, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13548, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12502, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14452, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1483, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1484, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1485, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1487, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1488, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16426, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1492, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14824, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1499, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14508, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14825, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18158, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12884, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1504, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17037, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1511, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14753, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1518, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1520, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17786, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15417, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1524, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17594, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1525, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16764, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1528, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15947, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13566, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13067, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12379, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16080, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16906, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12752, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13228, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14282, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15341, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1553, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1558, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14887, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1560, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1561, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1562, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18102, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1566, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1579, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1580, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1581, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17131, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16008, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13927, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1586, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14419, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13979, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13988, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12656, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12362, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18192, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16361, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1601, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15952, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16205, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12747, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16350, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15264, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13419, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13689, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17425, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17459, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17190, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14217, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12359, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12446, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14780, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14562, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14547, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14830, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15598, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15678, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14179, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15610, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18210, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18149, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14477, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17463, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13598, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13309, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13028, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16071, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17545, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17418, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1857, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 1870, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14974, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14098, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15571, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17768, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15150, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15194, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15957, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17633, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17022, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18144, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16953, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15531, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16986, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16386, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15411, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13681, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14382, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12689, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17153, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12950, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18123, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16240, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2019, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13558, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17095, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16070, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16201, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2071, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18040, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17384, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2100, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16057, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12913, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 16173, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17247, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2127, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2129, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15747, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14954, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 13429, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2144, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2149, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17097, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2153, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17835, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 14893, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2160, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2171, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17911, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2175, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2184, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 12558, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 18174, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2210, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2211, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 15907, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 17119, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2228, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2247, recommended_products: ['JUMBO BAG RED RETROSPOT']\n",
            "customer: 2256, recommended_products: ['JUMBO BAG RED RETROSPOT']\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-ee217a8bb234>:12: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n",
            "  customers_without_max_product = data[data['Description'] == max_purchase_product][~data['CustomerID'].isin(cluster_data.index)]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "4BdHqdWoramM"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}